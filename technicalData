https://github.com/RameshMF/Angular8-SpringBoot-CRUD-Tutorial
Merge git branch into Master :- https://stackabuse.com/git-merge-branch-into-master/
 
select attachmentId into Sample from attachment where filePath not like '%pdf%' and filePath not like '%doc%' and filePath not like '%xls%' and filePath not like '%jpg%' and filePath not like '%png%' and filePath not like '%jpeg%' and filePath not like '%xlsx%' and filepath not like '%txt%' and filepath not like '%gif%' and filepath not like '%rtf%' and filepath not like '%sql%' and filepath not like '%tif%' and filepath not like '%msg%' and filepath not like '%htm%' and filepath not like '%zip%' and filepath not like '%dwg%' and filepath not like '%exe%' and filepath not like '%aspx%' and filepath not like '%docx%' and filepath not like '%bmp%' and filepath not like '%lnk%'  and filepath not like '%eml%'  and filepath not like '%fdf%' and FileName not like '%mht%' 
update attachment set filePath=null where attachmentId in (select AttachmentID from sample)
https://medium.com/trabe/fitting-the-artifact-size-in-spring-boot-applications-2b1da22a709e --springboot jar size reducing.

Angular Pipes :- https://angular.io/guide/pipes

Microservices Interview questions youtube link :- https://youtu.be/G0waumbpK48

Springboot with HTTPS link :- https://www.youtube.com/watch?v=rm9OKTSm-4A



SELECT d.name,COUNT(*) FROM employee e INNER JOIN department d ON d.id = e.dept_id GROUP BY d.name ORDER BY COUNT(*) DESC; - oracle 



SELECT d.name,COUNT(*) as count FROM employee e INNER JOIN department d ON e.dept_id= d.id GROUP BY d.name ORDER BY COUNT(*) DESC; - wrong 

SELECT * FROM (SELECT d.name,COUNT(e.id) as empcount FROM department d LEFT OUTER JOIN employee e ON e.dept_id= d.id GROUP BY d.name) ORDER BY empcount DESC,name;


  this.orderPipe.transform
  
  
  391268
  
  Optional<Order> optionalOrder = t.getOrder();
  
  Optional its a final class .
  
  Optioanl.of(Order);
  Optional.ofNullable(Class s);
  
  why LocalDate is used ? 
  
  Ans) Its detects Local Time Zone   --- 
  
  Diffrent JPA and Hibernate ..
  
  Hibernate is ORM framework 
  
  Load method gives Proxy object instead of real object 
  
  Performance is slow in JPA 
  
  JPA - Hibernate - JDBC - Queries 
  
    Hibernate 
	
	Configuration obj = SessionFactory 
	
	Session s = SessionFactory.getSession();
	
	When  SessionFactory will close ?
	
	@Service or @Controller @Repository @Component 
	class X
	
	
	class Y 
	
	@Autowired
	 X x;
	
	
	
	In Spring how it create beans or autowire .
	
	How will u create datasource in spring mvc 
	
	 dta
	 
	 @Bean
	 private DataSource d =new DataSource();
	  globalsession 
	  session 
	  singleton 
	  prototype 
	  request 
	  
	  class A 
	  B b = new B(A a,C c);
	  class B 
	  private A a; - 100 objets 
	  class C 
	
	Javascript Interview Questions :- https://www.youtube.com/watch?v=kl2bM9e-jJc
	https://dzone.com/articles/easy-javascript-part-13-four-ways-to-create-object#:~:text=There%20are%20four%20ways%20to,The%20Object.
	https://www.w3schools.com/js/js_object_properties.asp
	Javascript Closure :- https://www.youtube.com/watch?v=yiEeiMN2Khs
	Closure function 
  function Person(pName){
  
     var _name=pName;
	 
	 this.getName = function(){
	 
	    return _name;
	 }
  
  
  }
 var me = new Person("Parasuram");
 me.getName();
	
	A JavaScript closure is a function that has a pointer reference to a free variable. A free variable is one that has fallen out of scope after its parent function has returned. However, if that outer function still has some reference to the free var (normally through a function that gets returned, or through a method property), the variable will not get garbage collected because it will have a non-zero reference count.
	Thus, from outside the function, we can still access the inner variable by means of the closure.
 Object Property access  
  function Person(pName){
  
     this.name =pName;
	 
	   
  
  }
    
  var me = new Person("Parasuram");
   me.name;
   
   
   
   Variable name has no access outside function
   
   function Person(pName){
  
     var name =pName;
	 
	   
  
  }
    
  var me = new Person("Parasuram");
   me.name; // it gives undefined 
   me // empty person object	
	
	Diff Let and Var in Javascript :- https://www.youtube.com/watch?v=XgSjoHgy3Rk
	
	Diff Local Storage & Session Storage https://www.youtube.com/watch?v=MOd5cTJ6kaA
	
	CORS ISSUE 
	
	https://www.youtube.com/watch?v=wMXU3dQWoOI
	https://www.youtube.com/watch?v=7h6htdxwBZA
	https://www.youtube.com/watch?v=Whgr8DKfs6U
	https://www.youtube.com/watch?v=7h6htdxwBZA
	
	ReactJs Udemy Stuff 
	https://codepen.io/anon/pen/MELQaQ - example 1
	Javascript editor
http://jsbin.com/?html,js,console
Splice method in arrays
var array=[1,2,3,4,5];
console.log(array.splice(3,4));
console.log('array elements are' + array);

Output :- 4,5 
          1,2,3
Splice method returns the removed items from the array 
Here array.splice(3,4) . 3,4 are the indexes names of the array . its indexes values are array[3]=4 array[4]=5.
 
var array=[8,42,32,41,58];
console.log(array.splice(3));	
Slice method in Javascript 
Link :- https://www.youtube.com/watch?v=QdwLGI1yNrk 
Slice method slice the elements according to the range and number you specified and returns new array with those indexes values .
 var array=[8,42,32,41,58];
 console.log(array.slice(3));
 Output :- 41,58
 var array=[8,42,32,41,58,5,7,21,44,65,63,78,79,3,11];
 console.log(array.slice(3,6));
 Output :- 41,58,5
	
	
	
